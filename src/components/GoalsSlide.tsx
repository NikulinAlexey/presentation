import { motion } from "framer-motion";
import { useState } from "react";

const GoalsSlide = () => {
  const [animated, setAnimated] = useState(true);
  const goals = [
    {
      title: "–û—Å–≤–æ–∏—Ç—å –Ω–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏",
      description:
        "–ò–∑—É—á–∏—Ç—å Next.js –∏ WebGL –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –±–æ–ª–µ–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω—ã—Ö –∏ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤",
      emoji: "üöÄ",
    },
    {
      title: "–ü–æ–≤—ã—à–µ–Ω–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–¥–∞",
      description:
        "–í–Ω–µ–¥—Ä–∏—Ç—å TypeScript –≤ 100% –Ω–æ–≤—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤ –∏ –¥–æ—Å—Ç–∏—á—å 90% –ø–æ–∫—Ä—ã—Ç–∏—è —Ç–µ—Å—Ç–∞–º–∏",
      emoji: "üß™",
    },
    {
      title: "UX/UI —ç–∫—Å–ø–µ—Ä—Ç–∏–∑–∞",
      description:
        "–ü—Ä–æ–π—Ç–∏ –∫—É—Ä—Å –ø–æ UX-–∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è–º –∏ –≤–Ω–µ–¥—Ä–∏—Ç—å 3+ —É–ª—É—á—à–µ–Ω–∏–π –≤ —Ç–µ–∫—É—â–∏–µ –ø—Ä–æ–µ–∫—Ç—ã",
      emoji: "üé®",
    },
    {
      title: "–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏",
      description:
        "–î–æ–±–∏—Ç—å—Å—è 95+ –±–∞–ª–ª–æ–≤ Lighthouse –¥–ª—è –≤—Å–µ—Ö –∫–ª—é—á–µ–≤—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü –ø—Ä–æ–µ–∫—Ç–æ–≤",
      emoji: "‚ö°",
    },
  ];

  // –ê–Ω–∏–º–∞—Ü–∏—è –¥–ª—è –∫–∞–∂–¥–æ–π —Ü–µ–ª–∏
  const itemVariants = {
    hidden: { opacity: 0, y: 20 },
    visible: (i: number) => ({
      opacity: 1,
      y: 0,
      transition: {
        delay: i * 0.2,
        duration: 0.8,
        type: "spring",
        stiffness: 100,
      },
    }),
  };

  return (
    <div
      className="w-full h-full bg-gradient-to-br from-purple-50 to-indigo-50 p-8 md:p-12 flex flex-col items-center justify-center"
      onClick={() => setAnimated(true)}
    >
      {/* –°–µ—Ç–∫–∞ —Ü–µ–ª–µ–π */}
      <div className="grid grid-cols-1 md:grid-cols-2 gap-8 w-full max-w-4xl">
        {goals.map((goal, index) => (
          <motion.div
            key={index}
            custom={index}
            initial="hidden"
            animate={animated ? "visible" : "hidden"}
            variants={itemVariants}
            whileHover={{ scale: 1.05 }}
            className="bg-white rounded-2xl p-6 shadow-lg flex flex-col items-start"
          >
            <div className="text-5xl mb-4">{goal.emoji}</div>
            <h3 className="text-xl font-bold text-gray-800 mb-2">
              {goal.title}
            </h3>
            <p className="text-gray-600">{goal.description}</p>

            {/* –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å –±–∞—Ä */}
            <motion.div
              className="w-full h-2 bg-gray-200 rounded-full mt-4 overflow-hidden"
              initial={{ width: 0 }}
              animate={animated ? { width: "100%" } : {}}
              transition={{ delay: index * 0.2 + 0.8, duration: 1.5 }}
            >
              <div
                className="h-full bg-indigo-500 rounded-full"
                style={{ width: "0%" }}
              ></div>
            </motion.div>
          </motion.div>
        ))}
      </div>

      {/* –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ—É—Ç–µ—Ä */}
      <motion.div
        initial={{ opacity: 0 }}
        animate={animated ? { opacity: 1 } : {}}
        transition={{ delay: 2 }}
        className="mt-12 text-sm text-gray-500 text-center"
      >
        <p>–î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ —ç—Ç–∏—Ö —Ü–µ–ª–µ–π –ø–æ–º–æ–∂–µ—Ç —Å—Ç–∞—Ç—å Senior Frontend Developer</p>
      </motion.div>
    </div>
  );
};

export default GoalsSlide;
